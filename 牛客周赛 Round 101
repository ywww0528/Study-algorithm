// 牛客周赛 Round 101

//C（位运算）
#include<iostream>
#include<cmath>
using namespace std;
long long solve(long long n){
    long long t=1;
    long long cnt=0;
    if(n==1)return 1;
    while(n!=0){
        cnt++;
        n/=2;
    }
    return cnt;
}
long long fp(long long a,long long b){
long long tmp=1;
while(b!=0){
if(b&1)tmp=(tmp*a);
a=(a*a);
b>>=1;
}
return tmp;
}
int main(){
    long long n;
    cin>>n;
    long long tem=solve(n);
    cout<<fp(2,tem)-1;
}

//D（位运算）
#include <iostream>
#include <algorithm>
#include <vector>
using namespace std;
int main(void)
{
	ios::sync_with_stdio(false);
	cin.tie(0);
	int n,m,i;
	cin>>n>>m;
	if(m%2==0||n<(1<<__lg(m)))
	{
		cout<<"-1";
		return 0;
	}
	vector<int> v1,v2;
	for(i=1;i<30;++i)
		if((m>>i)&1)
			v1.emplace_back(1<<i);
	for(i=1;i<=n;++i)
		if(find(v1.begin(),v1.end(),i)==v1.end())
			v2.emplace_back(i);
	for(int e1:v1)
		cout<<e1<<' ';
	for(int e2:v2)
		cout<<e2<<' ';
	cout<<'\n';
	cout<<v1.size()+1<<'\n';
	for(i=0;i<v1.size();++i)
		cout<<i+1<<' '<<i+1<<'\n';
	cout<<v1.size()+1<<' '<<n;
	return 0;
}
